package com.sendinfo.facestandard.linetake.module.common;

import android.Manifest;
import android.content.Intent;
import android.text.InputType;
import android.view.View;
import android.widget.EditText;

import com.aibee.auth.AibeeAuth;
import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.LogUtils;
import com.blankj.utilcode.util.SPUtils;
import com.blankj.utilcode.util.StringUtils;
import com.sendinfo.facestandard.linetake.R;
import com.sendinfo.facestandard.linetake.base.BaseMVPActivity;
import com.sendinfo.facestandard.linetake.base.MyApplication;
import com.sendinfo.facestandard.linetake.bean.eventbus.PicInfo;
import com.sendinfo.facestandard.linetake.module.MainActivity;
import com.sendinfo.facestandard.linetake.mvp.BaseResponse;
import com.sendinfo.facestandard.linetake.mvp.CommonP;
import com.sendinfo.facestandard.linetake.mvp.HttpDto;
import com.sendinfo.facestandard.linetake.mvp.ICommonView;
import com.sendinfo.facestandard.linetake.mvp.TicketDetailP;
import com.sendinfo.facestandard.linetake.util.Constraint;
import com.sendinfo.facestandard.linetake.util.JsonUtil.JsonUtil;
import com.sendinfo.facestandard.linetake.util.other.EventBusFactory;
import com.sendinfo.facestandard.linetake.widget.MyTopNavBar;

import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.Map;

import butterknife.BindView;
import butterknife.OnClick;

public class LoginActivity extends BaseMVPActivity<CommonP> implements ICommonView {

    @BindView(R.id.top_bar)
    MyTopNavBar topNavBar;

    @BindView(R.id.user_name_et)
    EditText userNameEt;

    @BindView(R.id.password_et)
    EditText passwordEt;

    private MyApplication myApplication;


    @Override
    protected void initArgs(Intent intent) {

    }

    @Override
    protected void initView() {

        myApplication = getAppApplication();
        mPresenter = new CommonP(this);
        checkPermission((permission)->{},Manifest.permission.READ_PHONE_STATE,Manifest.permission.READ_EXTERNAL_STORAGE,
                Manifest.permission.WRITE_EXTERNAL_STORAGE,Manifest.permission.CAMERA);

        passwordEt.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
        topNavBar.setRightIcon(R.mipmap.setting);
        topNavBar.setRightClickListener(v -> ActivityUtils.startActivity(SettingActivity.class));
    }

    @Override
    protected void initData() {

    }

    @Override
    protected int getLayoutId() {
        return R.layout.activity_login;
    }

    @Override
    protected void onResume() {
        super.onResume();
        if (!myApplication.isFaceAuthSuccess){
            applyFaceService();
        }
    }

    @OnClick(R.id.login_btn)
    public void login(View view){

        String username = userNameEt.getText().toString().trim();
        String password = passwordEt.getText().toString().trim();
        if (StringUtils.isEmpty(username)){

            showDialog("请输入用户名");
            return;
        }

        if (StringUtils.isEmpty(password)){

            showDialog("请输入密码");
            return;
        }


        if (isFastClick())return;

        if (isGotoSettingActivity()){

            ActivityUtils.startActivity(SettingActivity.class);
            return;

        }
        HttpDto httpDto = new HttpDto(Constraint.LOGIN);
        Map<String,String> params = new HashMap<>();
        params.put("UserName",username);
        params.put("Password",password);
        httpDto.setParams(params);
        mPresenter.getData(httpDto);


    }

    //aibee鉴权
    public void applyFaceService(){

        AibeeAuth.getsInstance().authByServer(getApplicationContext(),
                Constraint.SdkKey,Constraint.SdkSecret,new AuthCallBack(LoginActivity.this));

    }

    public static class AuthCallBack implements AibeeAuth.AuthResultCallbck{

        WeakReference<LoginActivity> weakReference;

        public AuthCallBack(LoginActivity activity){

            weakReference = new WeakReference<>(activity);

        }
        @Override
        public void onSuccess() {

            LoginActivity loginActivity = weakReference.get();
            loginActivity.myApplication.isFaceAuthSuccess = true;
            LogUtils.d("鉴权成功");
        }

        @Override
        public void onFail(AibeeAuth.AuthResult authResult) {

            LoginActivity loginActivity = weakReference.get();
            loginActivity.myApplication.isFaceAuthSuccess = false;

            if (loginActivity !=null){

                if (!loginActivity.isFinishing()){

                    loginActivity.showWarnDialog("人脸鉴权失败");

                }
                LogUtils.d("人脸鉴权失败"+authResult.toString());
            }
        }
    }

    @Override
    public void Success(BaseResponse response) {



    }

    //配置信息不完整就跳转到设置页
    private  boolean isGotoSettingActivity(){

        String s0 = SPUtils.getInstance().getString(Constraint.BUSINESS_IP);
        String s1 = SPUtils.getInstance().getString(Constraint.BUSINESS_PORT);
        String s4 = SPUtils.getInstance().getString(Constraint.GROUP_ID);
        String s5 = SPUtils.getInstance().getString(Constraint.GATE_NO);
        String s6 = SPUtils.getInstance().getString(Constraint.GATE_IP);

        if (StringUtils.isEmpty(s0)
                ||StringUtils.isEmpty(s1)
                ||StringUtils.isEmpty(s4)
                ||StringUtils.isEmpty(s5)
                ||StringUtils.isEmpty(s6)
                ){

            return true;

        }else {

            return false;
        }

    }


}
