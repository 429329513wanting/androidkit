package com.sendinfo.facestandard.linetake.module.common;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.SPUtils;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.sendinfo.facestandard.linetake.R;
import com.sendinfo.facestandard.linetake.base.BaseMVPActivity;
import com.sendinfo.facestandard.linetake.bean.ParkM;
import com.sendinfo.facestandard.linetake.mvp.BaseResponse;
import com.sendinfo.facestandard.linetake.mvp.CommonP;
import com.sendinfo.facestandard.linetake.mvp.HttpDto;
import com.sendinfo.facestandard.linetake.mvp.ICommonView;
import com.sendinfo.facestandard.linetake.util.Constraint;
import com.sendinfo.facestandard.linetake.util.JsonUtil.JsonUtil;
import com.sendinfo.facestandard.linetake.util.string.StringUtils;
import com.sendinfo.facestandard.linetake.widget.MyTopNavBar;
import com.sendinfo.loglib.LogFilterActivity;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.OnClick;
import cn.pedant.SweetAlert.SweetAlertDialog;

public class SettingActivity extends BaseMVPActivity<CommonP> implements ICommonView {

    @BindView(R.id.top_bar)
    MyTopNavBar topNavBar;

    @BindView(R.id.mEtIp)
    EditText faceIPEt;

    @BindView(R.id.log_tv)
    TextView logTv;

    @BindView(R.id.mEtPort)
    EditText facePortEt;

    @BindView(R.id.mEtIp2)
    EditText businessIPEt;

    @BindView(R.id.mEtPort2)
    EditText businessPortEt;

    @BindView(R.id.mEtGroupId)
    EditText groupidEt;

    @BindView(R.id.mEtGateNo)
    EditText gateNoEt;

    @BindView(R.id.mEtGateIP)
    EditText gateIPEt;

    @BindView(R.id.park_config_tv)
    TextView parkConfigTv;

    @BindView(R.id.order_list_tv)
    TextView orderListTv;

    private List<ParkM> parks;
    private List<String> parkNames = new ArrayList<>();
    private int selectedIndex;

    @Override
    protected void initArgs(Intent intent) {


    }

    @Override
    protected void initView() {


        mPresenter = new CommonP(this);

        topNavBar.setBackClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                exit();
            }
        });
        topNavBar.setTitle("设置");

        parkConfigTv.setOnClickListener((view)->{

            int curIndex = 0;
            for (int i=0;i<parks.size();i++){

                ParkM pm = parks.get(i);
                if (pm.PARKCODE.equals(SPUtils.getInstance().getString(Constraint.PARK_CODE))){

                    curIndex = i;
                    break;
                }
            }

            String[] items = parkNames.toArray(new String[parkNames.size()]);
            AlertDialog.Builder builder = new AlertDialog.Builder(this,3);
            builder.setTitle("景点配置");
            builder.setSingleChoiceItems(items, curIndex,
                    (DialogInterface.OnClickListener) (dialog, which) -> selectedIndex = which);


            builder.setPositiveButton("确认",(dialog, index)->{

                dialog.dismiss();
                ParkM parkM = parks.get(selectedIndex);
                SPUtils.getInstance().put(Constraint.PARK_CODE,parkM.PARKCODE);


            });
            builder.setNegativeButton("取消",(dialog, which)-> dialog.dismiss());
            builder.create().show();

        });
        logTv.setOnClickListener((v)->{

            Intent intent = new Intent(SettingActivity.this, LogFilterActivity.class);
            startActivity(intent);
        });
    }

    @Override
    protected void initData() {

        businessIPEt.setText(SPUtils.getInstance().getString(Constraint.BUSINESS_IP));
        businessPortEt.setText(SPUtils.getInstance().getString(Constraint.BUSINESS_PORT));
        faceIPEt.setText(SPUtils.getInstance().getString(Constraint.FACE_IP, "sendinfo.aibee.cn"));
        facePortEt.setText(SPUtils.getInstance().getString(Constraint.FACE_PORT));
        groupidEt.setText(SPUtils.getInstance().getString(Constraint.GROUP_ID, "9999"));
        gateNoEt.setText(SPUtils.getInstance().getString(Constraint.GATE_NO));
        gateIPEt.setText(SPUtils.getInstance().getString(Constraint.GATE_IP));


    }



    @Override
    protected int getLayoutId() {
        return R.layout.activity_setting;
    }

    @OnClick(R.id.mTvSave)
    public void onViewClicked(View view) {

        if (isFastClick()) {
            return;
        }
        String businessIP = businessIPEt.getText().toString().trim();
        String businessPort = businessPortEt.getText().toString().trim();
        String faceIP = faceIPEt.getText().toString().trim();
        String facePort = facePortEt.getText().toString().trim();
        String groupID = groupidEt.getText().toString().trim();
        String gateNo = gateNoEt.getText().toString().trim();
        String gateIP = gateIPEt.getText().toString().trim();


        if (StringUtils.isBlank(businessIP)) {

            showToast("请输入服务器地址");
            return;
        }
        if (StringUtils.isBlank(businessPort)) {

            showToast("请输入服务器端口");
            return;
        }

        if (StringUtils.isBlank(faceIP)) {


            faceIP = "sendinfo.aibee.cn";
        }

        if (StringUtils.isBlank(facePort)) {


            facePort = "";
        }

        if (StringUtils.isBlank(groupID)) {

            showToast("请输入groupid");
            return;
        }

        if (StringUtils.isBlank(gateNo)) {

            showToast("请输入通道号");
            return;
        }

        if (StringUtils.isBlank(gateIP)) {

            showToast("请输入通道IP");
            return;
        }

        SPUtils.getInstance().put(Constraint.BUSINESS_IP, businessIP);
        SPUtils.getInstance().put(Constraint.BUSINESS_PORT, businessPort);
        SPUtils.getInstance().put(Constraint.FACE_IP, faceIP);
        SPUtils.getInstance().put(Constraint.FACE_PORT, facePort);
        SPUtils.getInstance().put(Constraint.GROUP_ID, groupID);
        SPUtils.getInstance().put(Constraint.GATE_NO, gateNo);
        SPUtils.getInstance().put(Constraint.GATE_IP, gateIP);

        showToast("保存成功");

    }

    private void exit() {

        if (StringUtils.isBlank(SPUtils.getInstance().getString(Constraint.BUSINESS_IP))
                || StringUtils.isBlank(SPUtils.getInstance().getString(Constraint.BUSINESS_PORT))
                || StringUtils.isBlank(SPUtils.getInstance().getString(Constraint.GATE_NO))
                || StringUtils.isBlank(SPUtils.getInstance().getString(Constraint.GATE_IP))
                || StringUtils.isBlank(SPUtils.getInstance().getString(Constraint.GROUP_ID))

                ) {

            showWarnDialog("信息未填写完成, 确认退出程序?", new SweetAlertDialog.OnSweetClickListener() {
                @Override
                public void onClick(SweetAlertDialog sweetAlertDialog) {

                    finish();
                }
            }, new SweetAlertDialog.OnSweetClickListener() {
                @Override
                public void onClick(SweetAlertDialog sweetAlertDialog) {

                    myApplication.exitApp();
                }
            });
        } else {
            finish();
        }
    }

    @Override
    public void Success(BaseResponse response) {


    }

    @OnClick(R.id.order_list_tv)
    public void viewClick(View view){

    }
}
