package com.sendinfo.facestandard.linetake.module;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.TextView;

import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.RegexUtils;
import com.blankj.utilcode.util.SPUtils;
import com.blankj.utilcode.util.StringUtils;
import com.cretin.www.clearedittext.view.ClearEditText;
import com.google.gson.reflect.TypeToken;
import com.sendinfo.facestandard.linetake.R;
import com.sendinfo.facestandard.linetake.base.BaseMVPActivity;
import com.sendinfo.facestandard.linetake.bean.DataResponse;
import com.sendinfo.facestandard.linetake.bean.YearCard;
import com.sendinfo.facestandard.linetake.mvp.BaseResponse;
import com.sendinfo.facestandard.linetake.mvp.CommonP;
import com.sendinfo.facestandard.linetake.mvp.HttpDto;
import com.sendinfo.facestandard.linetake.mvp.ICommonView;
import com.sendinfo.facestandard.linetake.util.Constraint;
import com.sendinfo.facestandard.linetake.util.JsonUtil.JsonUtil;
import com.sendinfo.facestandard.linetake.widget.MyTopNavBar;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import butterknife.BindView;
import butterknife.OnClick;
import info.hoang8f.android.segmented.SegmentedGroup;

public class YearCardSearchActivity extends BaseMVPActivity<CommonP> implements ICommonView{

    @BindView(R.id.top_bar)
    MyTopNavBar topNavBar;

    @BindView(R.id.phone_et)
    ClearEditText phoneEt;
    @BindView(R.id.year_card_num_et)
    ClearEditText yearCardEt;
    @BindView(R.id.idcard_et)
    ClearEditText idCardEt;
    @BindView(R.id.segmented)
    SegmentedGroup segment;
    @BindView(R.id.phone_tv)
    TextView phoneTv;
    @BindView(R.id.idcard_ll)
    LinearLayout idcardLayout;
    @BindView(R.id.number_tv)
    TextView numberTv;

    private QueryType type = QueryType.NORMAL;


    public enum QueryType{
        NORMAL,
        HOTEL
    }

    @Override
    protected void initArgs(Intent intent) {

    }

    @Override
    protected void initView() {

        mPresenter = new CommonP(this);
        SPUtils.getInstance().put(Constraint.CARD_TYPE,"0");

        topNavBar.setBackClickListener(v -> finish());

        segment.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {

                phoneEt.setText("");
                yearCardEt.setText("");

                if (checkedId == R.id.seg_year_btn){

                    type = QueryType.NORMAL;
                    phoneTv.setText("手机号");
                    phoneEt.setHint("请输入手机号");

                    numberTv.setText("卡号");
                    yearCardEt.setHint("请输入年卡卡号");

                    idcardLayout.setVisibility(View.VISIBLE);
                    SPUtils.getInstance().put(Constraint.CARD_TYPE,"0");


                }else if(checkedId == R.id.seg_hotel_btn){

                    type = QueryType.HOTEL;
                    phoneTv.setText("姓名");
                    phoneEt.setHint("请输入姓名");

                    numberTv.setText("房号");
                    yearCardEt.setHint("请输入房号");

                    idcardLayout.setVisibility(View.INVISIBLE);
                    SPUtils.getInstance().put(Constraint.CARD_TYPE,"1");


                }
            }
        });
    }

    @Override
    protected void initData() {

    }

    @Override
    protected int getLayoutId() {
        return R.layout.activity_year_card_search;
    }


    @OnClick(R.id.sure_btn)
    public void viewClick(View view){

        String phone = phoneEt.getText().toString().trim();
        String yearCard = yearCardEt.getText().toString().trim();
        String idCard = idCardEt.getText().toString().trim();


        if (StringUtils.isEmpty(phone)
                && StringUtils.isEmpty(yearCard)
                && StringUtils.isEmpty(idCard)){

            showWarnDialog("请输入查询条件");
            return;
        }

        if (!StringUtils.isEmpty(phone) && type==QueryType.NORMAL){

            if (!RegexUtils.isMobileExact(phone)){

                showWarnDialog("请输入有效的手机号");
                return;
            }
        }

        //调用接口
        HttpDto httpDto = new HttpDto(Constraint.QUERY_YEARCARD);
        Map<String, String> params = new HashMap<>();
        params.put("CardType", this.type==QueryType.NORMAL?"0":"1");
        params.put("Parkcode", SPUtils.getInstance().getString(Constraint.PARK_CODE));

        String params0 = phoneEt.getText().toString().trim();
        String params1 = yearCardEt.getText().toString().trim();
        String params2 = idCardEt.getText().toString().trim();


        if (type == QueryType.NORMAL){

            if (!StringUtils.isEmpty(params0)){

                params.put("Telno",params0);

            }

            if (!StringUtils.isEmpty(params1)){

                params.put("Cardno",params1);

            }

            if (!StringUtils.isEmpty(params2)){

                params.put("Certno",params2);

            }

        }else{

            if (!StringUtils.isEmpty(params0)){

                params.put("Accname",params0);

            }

            if (!StringUtils.isEmpty(params1)){

                params.put("Roomname",params1);

            }

        }
        httpDto.setParams(params);
        mPresenter.getData(httpDto);

    }

    @Override
    public void Success(BaseResponse response) {




    }
}
